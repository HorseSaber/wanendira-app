// image-generator.js - Modul khusus untuk Text to Image Generator

function buildImagePrompt() {
    const conceptInput = document.getElementById('image-concept').value;
    const artStyleSelect = document.getElementById('art-style');
    const moodLightingSelect = document.getElementById('mood-lighting');
    const compositionSelect = document.getElementById('composition');
    const qualitySelect = document.getElementById('quality-settings');

    if (conceptInput.trim() === '') {
        alert('Kolom konsep gambar tidak boleh kosong!');
        return null;
    }

    const artStyle = artStyleSelect.options[artStyleSelect.selectedIndex].text;
    const moodLighting = moodLightingSelect.options[moodLightingSelect.selectedIndex].text;
    const composition = compositionSelect.options[compositionSelect.selectedIndex].text;
    const quality = qualitySelect.options[qualitySelect.selectedIndex].text;

    return `
Anda adalah seorang ahli prompt engineering untuk AI Image Generator (Midjourney, DALL-E, Stable Diffusion).
Tugas Anda adalah mengoptimalkan deskripsi pengguna menjadi prompt yang detail dan efektif untuk menghasilkan gambar berkualitas tinggi.

**Input dari Pengguna:**
*   **Konsep Gambar:** "${conceptInput}"
*   **Gaya Seni:** "${artStyle}"
*   **Mood & Pencahayaan:** "${moodLighting}"
*   **Komposisi:** "${composition}"
*   **Kualitas:** "${quality}"

**Instruksi Output:**
Hasilkan output dalam format JSON yang valid dan hanya JSON saja, tanpa tambahan teks atau format markdown. JSON harus memiliki struktur sebagai berikut:
{
  "optimized_prompt": "Prompt yang sudah dioptimalkan dengan struktur: [Subject] + [Style] + [Composition] + [Lighting] + [Quality] + [Technical parameters]. Gunakan bahasa Inggris yang jelas dan spesifik.",
  "negative_prompt": "Daftar elemen yang harus dihindari dalam gambar, seperti: blurry, low quality, distorted, extra limbs, bad anatomy, worst quality, low resolution, etc.",
  "platform_recommendations": "Rekomendasi platform AI terbaik untuk jenis prompt ini (contoh: Midjourney untuk artistic styles, DALL-E untuk conceptual, Stable Diffusion untuk detailed realism)",
  "settings_suggestions": "Saran pengaturan teknis seperti aspect ratio, steps, CFG scale, atau model yang cocok untuk hasil optimal",
  "style_keywords": "Keywords tambahan yang bisa digunakan untuk variasi gaya: kata kunci yang relevan dengan gaya seni yang dipilih",
  "inspiration_artists": "Nama-nama artist atau fotografer yang bisa dijadikan referensi untuk gaya ini"
}

Pastikan prompt yang dihasilkan:
1. Menggunakan bahasa Inggris yang jelas dan spesifik
2. Mengikuti struktur yang optimal untuk AI Image Generator
3. Menyertakan detail teknis yang relevan
4. Menghindari ambiguitas
5. Mengoptimalkan untuk hasil visual yang memukau
    `.trim();
}

function displayImageResults(data) {
    const outputWrapper = document.getElementById('image-output-wrapper');
    const outputPlaceholder = document.getElementById('image-output-placeholder');
    
    document.getElementById('optimized-prompt').innerText = data.optimized_prompt || '';
    document.getElementById('negative-prompt').innerText = data.negative_prompt || '';
    document.getElementById('platform-recommendations').innerText = data.platform_recommendations || '';
    document.getElementById('settings-suggestions').innerText = data.settings_suggestions || '';

    outputPlaceholder.style.display = 'none';
    outputWrapper.style.display = 'flex';
}

function generateImageTextForExport() {
    const optimizedPrompt = document.getElementById('optimized-prompt').innerText;
    const negativePrompt = document.getElementById('negative-prompt').innerText;
    const platformRec = document.getElementById('platform-recommendations').innerText;
    const settingsSugg = document.getElementById('settings-suggestions').innerText;

    return `--- OPTIMIZED PROMPT ---
${optimizedPrompt}

--- NEGATIVE PROMPT ---
${negativePrompt}

--- PLATFORM RECOMMENDATIONS ---
${platformRec}

--- SETTINGS SUGGESTIONS ---
${settingsSugg}

--- CARA PENGGUNAAN ---
1. Salin "Optimized Prompt" ke AI Image Generator pilihan Anda
2. Salin "Negative Prompt" ke kolom negative prompt (jika tersedia)
3. Gunakan pengaturan yang disarankan untuk hasil optimal
4. Eksperimen dengan variasi kata kunci untuk hasil yang berbeda

Generated by Wanendira. - Text to Image Studio`.trim();
}

// Event listeners khusus untuk Image Generator
document.addEventListener('DOMContentLoaded', () => {
    // Cek apakah kita berada di halaman image generator
    if (window.location.pathname.includes('generator-image.html')) {
        
        const generateBtn = document.querySelector('.generate-btn');
        if (generateBtn) {
            generateBtn.addEventListener('click', async () => {
                const apiKey = localStorage.getItem('geminiApiKey');
                if (!apiKey) {
                    alert('API Key belum diatur. Silakan atur di menu Pengaturan.');
                    document.getElementById('api-key-modal')?.classList.add('open');
                    return;
                }

                const prompt = buildImagePrompt();
                if (!prompt) return;

                const outputPlaceholder = document.getElementById('image-output-placeholder');
                const outputWrapper = document.getElementById('image-output-wrapper');
                
                outputPlaceholder.innerHTML = `<div class="loading-spinner"></div><p style="margin-top: 1rem; color: var(--text-secondary);">AI sedang mengoptimalkan prompt...</p>`;
                outputPlaceholder.style.display = 'flex';
                outputWrapper.style.display = 'none';

                try {
                    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent`;
                    const requestBody = { contents: [{ parts: [{ text: prompt }] }] };

                    const response = await fetch(url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-goog-api-key': apiKey
                        },
                        body: JSON.stringify(requestBody),
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.error.message || `HTTP error! Status: ${response.status}`);
                    }

                    const responseData = await response.json();
                    const text = responseData.candidates[0].content.parts[0].text;
                    const cleanedText = text.replace(/```json/g, '').replace(/```/g, '').trim();
                    const data = JSON.parse(cleanedText);
                    
                    displayImageResults(data);
                    
                } catch (error) {
                    console.error("Error saat menghubungi AI:", error);
                    alert("Terjadi kesalahan: " + error.message);
                    outputPlaceholder.innerHTML = `<p style="color: #ff6b6b;">Gagal. Periksa API Key atau lihat console untuk detail.</p>`;
                }
            });
        }

        // Event Listener untuk Tombol Copy
        const imageCopyBtn = document.getElementById('image-copy-btn');
        if (imageCopyBtn) {
            imageCopyBtn.addEventListener('click', () => {
                const textToCopy = generateImageTextForExport();
                navigator.clipboard.writeText(textToCopy).then(() => {
                    alert('Prompt berhasil disalin!');
                }).catch(err => {
                    console.error('Gagal menyalin teks: ', err);
                    alert('Gagal menyalin. Coba lagi.');
                });
            });
        }

        // Event Listener untuk Tombol Download
        const imageDownloadBtn = document.getElementById('image-download-btn');
        if (imageDownloadBtn) {
            imageDownloadBtn.addEventListener('click', () => {
                try {
                    const textToDownload = generateImageTextForExport();
                    const downloadLink = document.createElement('a');
                    downloadLink.download = 'wanendira_image_prompt.txt';
                    const dataUri = 'data:text/plain;charset=utf-8,' + encodeURIComponent(textToDownload);
                    downloadLink.href = dataUri;
                    downloadLink.click();
                } catch (error) {
                    console.error('Gagal men-download file:', error);
                    alert('Gagal men-download file.');
                }
            });
        }
    }
});